{"version":3,"file":"static/js/414.3033f6ff.chunk.js","mappings":"+LAEaA,EAAYC,EAAAA,GAAAA,IAAH,sO,UCGTC,EAAuB,CAClC,CACEC,GAAI,EACJC,QAAQ,8HAKV,CACED,GAAI,EACJC,QAAQ,sC,iKCVCC,EAAOJ,EAAAA,GAAAA,IAAH,miBAIFK,EAAAA,IAMF,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,SAAhB,GAGDH,EAAAA,IAQX,SAAAC,GAAK,OAAIA,EAAMC,MAAME,SAAhB,IAII,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,SAAhB,IAKPE,EAAYV,EAAAA,GAAAA,IAAAA,OAAiB,SAACM,GAAD,MAAgC,CACxEK,IAAKL,EAAMM,MAAQC,EAAQC,EAC3BC,IAAK,OAFmC,GAAjBf,CAAH,uGASlB,SAAAM,GAAK,OAAKA,EAAMU,OAASV,EAAMM,OAAtB,uBAAJ,I,4BCoBT,EAnD4C,SAAC,GAAqB,IAAnBT,EAAkB,EAAlBA,QAASD,EAAS,EAATA,GAC9Ce,GAAWC,EAAAA,EAAAA,MAAXD,OACR,GAA8CE,EAAAA,EAAAA,MAAtCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,WAAYC,EAApC,EAAoCA,MAEpC,GAA0BC,EAAAA,EAAAA,WAAkB,GAA5C,eAAOZ,EAAP,KAAca,EAAd,KACA,GAAsBD,EAAAA,EAAAA,UAAiB,GAAvC,eAAOE,EAAP,KAAYC,EAAZ,MAEAC,EAAAA,EAAAA,YAAU,WACRC,IAAAA,KAAA,UACKC,EAAAA,EADL,6BACiC5B,GAC/B,CAAC,EACD,CAAC6B,QAAS,CAACC,cAAc,UAAD,OAAYT,MACpCU,MAAK,gBAAEC,EAAF,EAAEA,KAAF,OAAYP,GAAQO,EAAKd,MAAzB,IACPK,EAASL,EAAMe,SAAS,QAAQjC,GACjC,GAAE,CAACA,EAAIqB,IA0BR,OACE,UAACnB,EAAD,YACE,0BAAOD,KACP,iBAAKiC,QA3BU,WACZxB,EAWHiB,IAAAA,IAAA,UACKC,EAAAA,EADL,+BACmC5B,GACjC,CAAC,EACD,CAAC6B,QAAS,CAACC,cAAc,UAAD,OAAYT,MACpCU,MAAK,WACLX,EAAY,QAAQpB,GACpBuB,GAAS,GACTE,GAAO,SAAAU,GAAI,OAAIA,EAAO,CAAX,GACZ,IAlBDR,IAAAA,IAAA,UACKC,EAAAA,EADL,4BACgC5B,GAC9B,CAAC,EACD,CAAC6B,QAAS,CAACC,cAAc,UAAD,OAAYT,MACpCU,MAAK,WACLZ,EAAS,QAAQnB,GACjBuB,GAAS,GACTE,GAAO,SAAAU,GAAI,OAAIA,EAAO,CAAX,GACZ,GAYJ,EAKG,WACE,SAAC3B,EAAD,CAAWM,KAAMC,EAAQL,MAAOA,KAChC,0BAAOc,EAAM,EAAIA,EAAM,UAI9B,EC9CD,EAVsC,WACpC,OACE,8BACGzB,EAAOqC,KAAI,SAAAC,GAAK,OACf,SAAC,GAAD,UAA8BA,GAAdA,EAAMrC,GADP,KAKtB,E,UCOD,EAZ8C,WAC5C,IAAQsC,GAAYC,EAAAA,EAAAA,MAAZD,QAIR,OAFAZ,EAAAA,EAAAA,YAAU,kBAAMY,EAAS,EAAf,GAAmB,KAG3B,SAACzC,EAAD,WACE,SAAC,EAAD,KAGL,C","sources":["pages/quotes/styles.tsx","data/quotes.data.ts","components/quotes/styles.tsx","components/quotes/quote-card.component.tsx","components/quotes/index.tsx","pages/quotes/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1.4rem 12%;\r\n  overflow: auto;\r\n  gap: 1.4rem;\r\n  /* mobile styles */\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 1.4rem 4.2%;\r\n  }\r\n`;\r\n","export interface Quote {\r\n  content: string;\r\n  id: number;\r\n}\r\n\r\nexport const quotes: Array<Quote> = [\r\n  {\r\n    id: 0,\r\n    content: `“Organs are like modules,\r\n    nerves are the compiler,\r\n    brain is the programmer,\r\n    and you are the user”`,\r\n  },\r\n  {\r\n    id: 1,\r\n    content: `“Tweet less, code more”`,\r\n  },\r\n];\r\n","import styled from 'styled-components';\r\nimport heart from \"../../assets/icons/heart.png\";\r\nimport heartUnfilled from \"../../assets/icons/heart-unfilled.png\";\r\nimport { FadeAnim1 } from '../../utils/styles.util';\r\n\r\nexport const Card = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  animation: ${FadeAnim1} 1s;\r\n  gap: 0.21rem;\r\n  span {\r\n    font-family: montserrat;\r\n    font-size: 2.1rem;\r\n    opacity: 0.84;\r\n    color: ${props => props.theme.fontColor};\r\n  }\r\n  div {\r\n    animation: ${FadeAnim1} 1s;\r\n    align-self: flex-end;\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    gap: 0.42rem;\r\n    padding: 0.28rem 0.3rem;\r\n    border-radius: 0.3rem;\r\n    ${props => props.theme.boxShadow}\r\n    span {\r\n      font-family: arial;\r\n      font-size: 1.2rem;\r\n      color: ${props => props.theme.fontColor};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const HeartIcon = styled.img.attrs((props: { liked: boolean }) => ({\r\n  src: props.liked ? heart : heartUnfilled,\r\n  alt: \"like\",\r\n}))<{ dark: boolean; liked: boolean }>`\r\n  width: 1.4rem;\r\n  height: auto;\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n  ${props => (props.dark && !props.liked) && `filter: invert(100%);`}\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { Quote } from \"../../data/quotes.data\";\r\nimport { API_URL } from \"../../utils/constants.util\";\r\n\r\nimport { Card, HeartIcon } from './styles';\r\n\r\nimport { useCommonContext } from '../../contexts/common.context';\r\nimport { useUserContext } from \"../../contexts/user.context\";\r\n\r\ninterface QuoteCardProps extends Quote {}\r\n\r\nconst QuoteCard: React.FC<QuoteCardProps> = ({ content, id }) => {\r\n  const { isDark } = useCommonContext();\r\n  const { likes, addLike, removeLike, token } = useUserContext();\r\n  \r\n  const [liked, setLiked] = useState<boolean>(false);\r\n  const [cnt, setCnt] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    axios.post(\r\n      `${API_URL}/api/quotes/likes/${id}`,\r\n      {},\r\n      {headers: {Authorization: `Bearer ${token}`}}\r\n    ).then(({data}) => setCnt(+data.likes));\r\n    setLiked(likes.includes(\"QUOTE\"+id));\r\n  }, [id, token]);\r\n\r\n  const toggleLike = () => {\r\n    if (!liked) {\r\n      axios.put(\r\n        `${API_URL}/api/quotes/like/${id}`,\r\n        {},\r\n        {headers: {Authorization: `Bearer ${token}`}}\r\n      ).then(() => {\r\n        addLike!('QUOTE'+id);\r\n        setLiked(true);\r\n        setCnt(prev => prev + 1);\r\n      });\r\n    } else {\r\n      axios.put(\r\n        `${API_URL}/api/quotes/dislike/${id}`,\r\n        {},\r\n        {headers: {Authorization: `Bearer ${token}`}}\r\n      ).then(() => {\r\n        removeLike!('QUOTE'+id);\r\n        setLiked(false);\r\n        setCnt(prev => prev - 1);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <span>{content}</span>\r\n      <div onClick={toggleLike}>\r\n        <HeartIcon dark={isDark} liked={liked} />\r\n        <span>{cnt > 0 ? cnt : ''}</span>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default QuoteCard;\r\n","import { quotes } from \"../../data/quotes.data\";\r\n\r\nimport QuoteCard from './quote-card.component';\r\n\r\ninterface QuotesProps {}\r\n\r\nconst Quotes: React.FC<QuotesProps> = () => {\r\n  return (\r\n    <>\r\n      {quotes.map(quote => (\r\n        <QuoteCard key={quote.id} {...quote} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Quotes;\r\n","import { useEffect } from \"react\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\nimport Quotes from '../../components/quotes';\r\nimport { useMenuContext } from \"../../contexts/menu.context\";\r\n\r\ninterface QuotesPageProps {}\r\n\r\nconst QuotesPage: React.FC<QuotesPageProps> = () => {\r\n  const { setMenu } = useMenuContext();\r\n\r\n  useEffect(() => setMenu!(7), []);\r\n  \r\n  return (\r\n    <Container>\r\n      <Quotes />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default QuotesPage;\r\n"],"names":["Container","styled","quotes","id","content","Card","FadeAnim1","props","theme","fontColor","boxShadow","HeartIcon","src","liked","heart","heartUnfilled","alt","dark","isDark","useCommonContext","useUserContext","likes","addLike","removeLike","token","useState","setLiked","cnt","setCnt","useEffect","axios","API_URL","headers","Authorization","then","data","includes","onClick","prev","map","quote","setMenu","useMenuContext"],"sourceRoot":""}