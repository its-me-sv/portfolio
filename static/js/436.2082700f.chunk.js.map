{"version":3,"file":"static/js/436.2082700f.chunk.js","mappings":"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","sources":["components/transcript-menu/index.tsx","components/certificates/styles.tsx","components/certificates/certificate-card.component.tsx","components/certificates/index.tsx","components/certificates/certificate-overview.component.tsx","components/badges/styles.tsx","components/badges/badge-card.component.tsx","components/badges/index.tsx","components/skills/styles.tsx","components/skills/skill-card.component.tsx","components/skills/index.tsx","pages/transcript/index.tsx"],"sourcesContent":["import { transcriptMenuTranslations } from '../../utils/translations.util';\r\nimport { MenuContainer, MenuItem } from '../../utils/styles.util';\r\n\r\nimport { useCommonContext } from '../../contexts/common.context';\r\nimport { useMenuContext } from '../../contexts/menu.context';\r\n\r\ninterface TranscriptMenuProps {}\r\n\r\nconst TranscriptMenu: React.FC<TranscriptMenuProps> = () => {\r\n  const { language, isDark } = useCommonContext();\r\n  const { transMenu, setTransMenu } = useMenuContext();\r\n\r\n  return (\r\n    <MenuContainer>\r\n      {Object.values(transcriptMenuTranslations).map((option, idx) => (\r\n        <MenuItem \r\n          key={option[+language]}\r\n          onClick={() => setTransMenu!(idx)}\r\n          selected={idx === transMenu}\r\n          dark={isDark}\r\n        >{option[+language]}</MenuItem>\r\n      ))}\r\n    </MenuContainer>\r\n  );\r\n};\r\n\r\nexport default TranscriptMenu;\r\n","import styled from 'styled-components';\r\nimport { DarkBoxShadow, LightBoxShadow, FadeAnim1 } from '../../utils/styles.util';\r\n\r\nexport const Container = styled.div`\r\n  overflow: auto;\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  grid-row-gap: 1.4rem;\r\n  place-items: center;\r\n  padding: 1.4% 0%;\r\n  /* mobile styles */\r\n  @media only screen and (max-width: 768px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-row-gap: 1rem;\r\n  }\r\n`;\r\n\r\nexport const Card = styled.div<{dark: boolean}>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 12rem;\r\n  height: 24rem;\r\n  overflow: auto;\r\n  text-align: center;\r\n  border-radius: 0.42rem;\r\n  justify-content: space-around;\r\n  padding: 0.42% 0;\r\n  animation: ${FadeAnim1} 1s;\r\n  ${LightBoxShadow}\r\n  ${props => props.dark && `${DarkBoxShadow}`}\r\n  /* mobile styles */\r\n  @media only screen and (max-width: 768px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-row-gap: 1rem;\r\n    width: 10rem;\r\n    height: 20rem;\r\n    padding-bottom: 1rem;\r\n  }\r\n`;\r\n\r\nexport const Provider = styled.img`\r\n  width: 7rem;\r\n  height: auto;\r\n  border-radius: 0.42rem;\r\n`;\r\n\r\nexport const Name = styled.span<{dark: boolean}>`\r\n  font-family: roboto;\r\n  font-size: 1.2rem;\r\n  color: #1a1a1a;\r\n  ${props => props.dark && `color: #f5f4f9;`}\r\n`;\r\n\r\nexport const Issued = styled.span<{dark: boolean}>`\r\n  font-family: bahnschrift;\r\n  font-size: 1.1rem;\r\n  color: #1a1a1a;\r\n  ${props => props.dark && `color: #f5f4f9;`}\r\n`;\r\n","import { Certificate } from '../../data/certificates.data';\r\n\r\nimport { Card, Provider, Name, Issued } from './styles';\r\nimport { CredBtn } from \"../../utils/styles.util\";\r\nimport { transcriptPageTranslations } from \"../../utils/translations.util\";\r\n\r\nimport { useCommonContext } from '../../contexts/common.context';\r\nimport { useTranscriptContext } from '../../contexts/transcript.context';\r\nimport { useCallback } from 'react';\r\n\r\ninterface CertificateCardProps extends Certificate {}\r\n\r\nconst CertificateCard: React.FC<CertificateCardProps> = ({\r\n  provider, name, date, picture, url\r\n}) => {\r\n  const { isDark, language } = useCommonContext();\r\n  const { setCurrCertificate } = useTranscriptContext();\r\n\r\n  const handleClick = useCallback(() => {\r\n    const certififacte: Certificate = {\r\n      provider, name, date,\r\n      picture, url\r\n    };\r\n    setCurrCertificate!(certififacte);\r\n  }, [provider, name, date, picture, url]);\r\n\r\n  return (\r\n    <Card dark={isDark}>\r\n      <Provider src={provider} alt=\"issuer logo\" />\r\n      <Name dark={isDark}>{name}</Name>\r\n      <Issued dark={isDark}>\r\n        {transcriptPageTranslations.issuedOn[+language]}: {date}\r\n      </Issued>\r\n      <CredBtn dark={isDark} onClick={handleClick}>\r\n        {transcriptPageTranslations.showCred[+language]}\r\n      </CredBtn>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CertificateCard;\r\n","import { useEffect } from 'react';\r\n\r\nimport { Container } from './styles';\r\n\r\nimport CertificateCard from './certificate-card.component';\r\nimport { useMenuContext } from '../../contexts/menu.context';\r\nimport { useTranscriptContext } from '../../contexts/transcript.context';\r\n\r\ninterface CertificatesProps {}\r\n\r\nconst Certificates: React.FC<CertificatesProps> = () => {\r\n  const { setTransMenu } = useMenuContext();\r\n  const { certificates } = useTranscriptContext();\r\n  \r\n  useEffect(() => setTransMenu!(0), []);\r\n\r\n  return (\r\n    <Container>\r\n      {certificates.map(certificate => (\r\n        <CertificateCard \r\n          key={certificate.name} \r\n          {...certificate} \r\n        />\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Certificates;\r\n","import { \r\n  OverviewContainer, OverviewBox, \r\n  CloseIcon, OverviewImage, OverviewHeader\r\n} from '../../utils/styles.util';\r\nimport { CredBtn } from \"../../utils/styles.util\";\r\nimport { transcriptPageTranslations } from \"../../utils/translations.util\";\r\n\r\nimport { useCommonContext } from '../../contexts/common.context';\r\nimport { useTranscriptContext } from '../../contexts/transcript.context';\r\n\r\ninterface CertificateOverviewProps {}\r\n\r\nconst CertificateOverview: React.FC<CertificateOverviewProps> = () => {\r\n  const { isDark, language } = useCommonContext();\r\n  const { currCertificate, setCurrCertificate } = useTranscriptContext();\r\n\r\n  if (!currCertificate) return <div />;\r\n  \r\n  return (\r\n    <OverviewContainer dark={isDark}>\r\n      <OverviewBox dark={isDark}>\r\n        <OverviewHeader>\r\n          <div />\r\n          <CloseIcon dark={isDark} onClick={() => setCurrCertificate!(null)} />\r\n        </OverviewHeader>\r\n        <OverviewImage\r\n          dark={isDark}\r\n          src={currCertificate.picture}\r\n          alt={currCertificate.name}\r\n        />\r\n        {currCertificate.url && (\r\n          <CredBtn dark={isDark}>\r\n            <a href={currCertificate.url} target=\"_blank\" rel=\"noreferrer\">\r\n              {transcriptPageTranslations.verify[+language]}\r\n            </a>\r\n          </CredBtn>\r\n        )}\r\n      </OverviewBox>\r\n    </OverviewContainer>\r\n  );\r\n};\r\n\r\nexport default CertificateOverview;\r\n","import styled from \"styled-components\";\r\nimport {\r\n  DarkBoxShadow,\r\n  LightBoxShadow,\r\n  FadeAnim1,\r\n} from \"../../utils/styles.util\";\r\n\r\nexport const Container = styled.div`\r\n  overflow: auto;\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  grid-row-gap: 1.4rem;\r\n  place-items: center;\r\n  padding: 1.4% 0%;\r\n  /* mobile styles */\r\n  @media only screen and (max-width: 768px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-row-gap: 1rem;\r\n  }\r\n`;\r\n\r\nexport const Card = styled.div<{dark: boolean}>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 12rem;\r\n  height: 16rem;\r\n  overflow: auto;\r\n  text-align: center;\r\n  border-radius: 0.42rem;\r\n  justify-content: space-around;\r\n  padding: 0.42% 0;\r\n  animation: ${FadeAnim1} 1s;\r\n  a {\r\n    all: unset;\r\n  }\r\n  ${LightBoxShadow}\r\n  ${(props) => props.dark && `${DarkBoxShadow}`}\r\n  /* mobile styles */\r\n  @media only screen and (max-width: 768px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-row-gap: 1rem;\r\n    width: 10rem;\r\n    height: 16rem;\r\n    padding-bottom: 1rem;\r\n  }\r\n`;\r\n\r\nexport const BadgeImg = styled.img`\r\n  width: 7rem;\r\n  height: auto;\r\n  border-radius: 0.42rem;\r\n`;\r\n\r\nexport const Issued = styled.span<{ dark: boolean }>`\r\n  font-family: bahnschrift;\r\n  font-size: 1.1rem;\r\n  color: #1a1a1a;\r\n  ${(props) => props.dark && `color: #f5f4f9;`}\r\n`;\r\n","import { Badge } from '../../data/badges.data';\r\nimport { transcriptPageTranslations } from '../../utils/translations.util';\r\n\r\nimport { Card, Issued, BadgeImg } from './styles';\r\nimport { CredBtn } from '../../utils/styles.util';\r\n\r\nimport { useCommonContext } from '../../contexts/common.context';\r\n\r\ninterface BadgeCardProps extends Badge {}\r\n\r\nconst BadgeCard: React.FC<BadgeCardProps> = ({\r\n  picture, url, issuer\r\n}) => {\r\n  const { isDark, language } = useCommonContext();\r\n\r\n  return (\r\n    <Card dark={isDark}>\r\n      <BadgeImg src={picture} alt=\"badge logo\" />\r\n      <Issued dark={isDark}>\r\n        {transcriptPageTranslations.issuedBy[+language]}: {issuer}\r\n      </Issued>\r\n      <CredBtn dark={isDark}>\r\n        <a href={url} target=\"_blank\" rel=\"noreferrer\">\r\n          {transcriptPageTranslations.verify[+language]}\r\n        </a>\r\n      </CredBtn>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default BadgeCard;\r\n","import { useEffect } from \"react\";\r\n\r\nimport { Container } from './styles';\r\n\r\nimport BadgeCard from \"./badge-card.component\";\r\nimport { useMenuContext } from '../../contexts/menu.context';\r\nimport { useTranscriptContext } from '../../contexts/transcript.context';\r\n\r\ninterface BadgesProps {}\r\n\r\nconst Badges: React.FC<BadgesProps> = () => {\r\n  const { setTransMenu } = useMenuContext();\r\n  const { badges } = useTranscriptContext();\r\n\r\n  useEffect(() => setTransMenu!(1), []);\r\n\r\n  return (\r\n    <Container>\r\n      {badges.map((badge, idx) => (\r\n        <BadgeCard key={badge.url+(idx+'')} {...badge} />\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Badges;\r\n","import styled from \"styled-components\";\r\nimport { FadeAnim1, LightBoxShadow, DarkBoxShadow } from '../../utils/styles.util';\r\n\r\nexport const Container = styled.div`\r\n  overflow: auto;\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  grid-row-gap: 1.4rem;\r\n  place-items: center;\r\n  padding: 1.4% 0%;\r\n  /* mobile styles */\r\n  @media only screen and (max-width: 768px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-row-gap: 1rem;\r\n  }\r\n`;\r\n\r\nexport const Card = styled.div<{dark: boolean}>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 10rem;\r\n  height: 12rem;\r\n  overflow: auto;\r\n  text-align: center;\r\n  border-radius: 0.42rem;\r\n  justify-content: space-around;\r\n  padding: 0.42% 0;\r\n  animation: ${FadeAnim1} 1s;\r\n  a {all: unset;}\r\n  ${LightBoxShadow}\r\n  img {\r\n    width: 7rem;\r\n    height: auto;\r\n    border-radius: 0.42rem;\r\n    animation: ${FadeAnim1} 1s;\r\n  }\r\n  ${(props) => props.dark && `${DarkBoxShadow}`}\r\n  /* mobile styles */\r\n  @media only screen and (max-width: 768px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-row-gap: 1rem;\r\n    width: 10rem;\r\n    height: 12rem;\r\n    padding-bottom: 1rem;\r\n  }\r\n`;\r\n\r\nexport const Name = styled.span<{dark: boolean}>`\r\n  font-family: roboto;\r\n  font-size: 1.2rem;\r\n  color: #1a1a1a;\r\n  ${props => props.dark && `color: #f5f4f9;`}\r\n`;\r\n","import { Skill } from \"../../data/skills.data\";\r\n\r\nimport { Card, Name } from \"./styles\";\r\n\r\nimport { useCommonContext } from '../../contexts/common.context';\r\n\r\ninterface SkillCardProps extends Skill {}\r\n\r\nconst SkillCard: React.FC<SkillCardProps> = ({\r\n  name, url\r\n}) => {\r\n  const { isDark } = useCommonContext();\r\n\r\n  return (\r\n    <Card dark={isDark}>\r\n      <img src={url} alt={name + \" logo\"} />\r\n      <Name dark={isDark}>{name}</Name>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SkillCard;\r\n","import { useEffect } from \"react\";\r\n\r\nimport { Container } from './styles';\r\n\r\nimport SkillCard from \"./skill-card.component\";\r\nimport { useMenuContext } from \"../../contexts/menu.context\";\r\nimport { useTranscriptContext } from '../../contexts/transcript.context';\r\n\r\ninterface SkillsProps {}\r\n\r\nconst Skills: React.FC<SkillsProps> = () => {\r\n  const { setTransMenu } = useMenuContext();\r\n  const { skills } = useTranscriptContext();\r\n  \r\n  useEffect(() => setTransMenu!(2), []);\r\n\r\n  return (\r\n    <Container>\r\n      {skills.map(skill => (\r\n        <SkillCard key={skill.name} {...skill} />\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","import { useEffect } from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\n\r\nimport { transcriptMenuTranslations } from '../../utils/translations.util';\r\nimport { PageContainer } from '../../utils/styles.util';\r\n\r\nimport TranscriptMenu from '../../components/transcript-menu';\r\nimport Certificates from \"../../components/certificates\";\r\nimport CertificateOverview from '../../components/certificates/certificate-overview.component';\r\nimport Badges from \"../../components/badges\";\r\nimport Skills from \"../../components/skills\";\r\n\r\nimport { useCommonContext } from '../../contexts/common.context';\r\nimport { useMenuContext } from '../../contexts/menu.context';\r\nimport { useTranscriptContext } from '../../contexts/transcript.context';\r\n\r\ninterface TranscriptPageProps {}\r\n\r\nconst TranscriptPage: React.FC<TranscriptPageProps> = () => {\r\n  const { language } = useCommonContext();\r\n  const { setMenu, transMenu, setTransMenu } = useMenuContext();\r\n  const { currCertificate } = useTranscriptContext();\r\n\r\n  useEffect(() => {\r\n    setMenu!(3);\r\n    setTransMenu!(0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const category: string = Object.values(transcriptMenuTranslations)[\r\n      transMenu\r\n    ][+language];\r\n    window.document.title = `${category} | Suraj Vijay`;\r\n  }, [transMenu, language]);\r\n\r\n  return (\r\n    <PageContainer>\r\n      {currCertificate && <CertificateOverview />}\r\n      <TranscriptMenu />\r\n      <Routes>\r\n        <Route path=\"certificates\" element={<Certificates />} />\r\n        <Route path=\"badges\" element={<Badges />} />\r\n        <Route path=\"skills\" element={<Skills />} />\r\n      </Routes>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default TranscriptPage;\r\n"],"names":["useCommonContext","language","isDark","useMenuContext","transMenu","setTransMenu","Object","values","transcriptMenuTranslations","map","option","idx","onClick","selected","dark","Container","styled","Card","FadeAnim1","LightBoxShadow","props","DarkBoxShadow","Provider","Name","Issued","provider","name","date","picture","url","setCurrCertificate","useTranscriptContext","handleClick","useCallback","src","alt","transcriptPageTranslations","certificates","useEffect","certificate","currCertificate","href","target","rel","BadgeImg","issuer","badges","badge","skills","skill","setMenu","category","window","document","title","path","element"],"sourceRoot":""}