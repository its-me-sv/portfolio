{"version":3,"file":"static/js/278.41ec4cee.chunk.js","mappings":"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","sources":["pages/achievements/styles.tsx","components/achievements/styles.tsx","components/achievements/achievement-card.component.tsx","components/achievements/index.tsx","components/achievements/achievement-overview.component.tsx","pages/achievements/index.tsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1.4rem 12%;\r\n  overflow: auto;\r\n  gap: 1.4rem;\r\n  /* mobile styles */\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 1.4rem 4.2%;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { LightBoxShadow, DarkBoxShadow, FadeAnim1 } from \"../../utils/styles.util\";\r\nimport clap from '../../assets/icons/clap.png';\r\nimport clapUnfilled from '../../assets/icons/clap-unfilled.png';\r\n\r\nexport const Card = styled.div<{dark: boolean}>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.42% 0.84%;\r\n  border-radius: 0.42rem;\r\n  gap: 0.42rem;\r\n  animation: ${FadeAnim1} 1s;\r\n  ${LightBoxShadow}\r\n  ${(props) => props.dark && DarkBoxShadow}\r\n  /* mobile styles */\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 0.5% 0.7rem;\r\n  }\r\n`;\r\n\r\nexport const Top = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Name = styled.span<{dark: boolean}>`\r\n  font-family: geomanist;\r\n  font-size: 1.8rem;\r\n  color: #1a1a1a;\r\n  ${props => props.dark && `color: #f5f4f9;`}\r\n`;\r\n\r\nexport const Description = styled.span<{dark: boolean}>`\r\n  font-family: arial;\r\n  font-size: 1.2rem;\r\n  color: #1a1a1a;\r\n  ${props => props.dark && `color: #f5f4f9;`}\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Interactions = styled.div<{dark: boolean}>`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.42rem;\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    gap: 0.3rem;\r\n    &:hover {opacity: 0.5;}\r\n    span {\r\n      font-family: arial;\r\n      font-size: 1.2rem;\r\n      color: #1a1a1a;\r\n      ${props => props.dark && `color: #f5f4f9;`}\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ClapIcon = styled.img.attrs((props: { liked: boolean }) => ({\r\n  src: props.liked ? clap : clapUnfilled,\r\n  alt: \"clap\",\r\n}))<{ dark: boolean; liked: boolean }>`\r\n  width: 2.1rem;\r\n  height: auto;\r\n  opacity: 0.9;\r\n  &:hover {opacity: 0.5;}\r\n  ${props => (props.dark && !props.liked) && `filter: invert(100%);`}\r\n`;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Achievement, AchievementStats } from \"../../data/achievements.data\";\r\nimport commentIcon from '../../assets/icons/comment.png';\r\nimport { API_URL } from \"../../utils/constants.util\";\r\n\r\nimport { \r\n  Card, Top, Name, Description, \r\n  Footer, Interactions, \r\n  ClapIcon\r\n} from './styles';\r\nimport { InteractionIcon } from \"../../utils/styles.util\";\r\nimport { CredBtn, HrzntlLn } from \"../../utils/styles.util\";\r\nimport { transcriptPageTranslations } from '../../utils/translations.util';\r\nimport { useCommonContext } from '../../contexts/common.context';\r\nimport { useAchievementContext } from '../../contexts/achievement.context';\r\nimport { useCommentsContext } from '../../contexts/comments.context';\r\nimport { useUserContext } from \"../../contexts/user.context\";\r\n\r\ninterface AchievementCardProps {\r\n  id: string;\r\n}\r\n\r\nconst AchievementCard: React.FC<AchievementCardProps> = ({id}) => {\r\n  const { isDark, language } = useCommonContext();\r\n  const { setCurrAchievement } = useAchievementContext();\r\n  const { setCommentsMeta, onUnmount, setCallbacks } = useCommentsContext();\r\n  const { likes, addLike, removeLike, token } = useUserContext();\r\n\r\n  const [achievement, setAchievement] = useState<Achievement|null>();\r\n  const [stats, setStats] = useState<AchievementStats|null>();\r\n  const [liked, setLiked] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    setLiked(likes.includes(id));\r\n    axios.post(\r\n      `${API_URL}/api/achievements/${id}`,\r\n      {},\r\n      {headers: {Authorization: `Bearer ${token}`}}\r\n    ).then(({data}) => setAchievement(data));\r\n    axios.post(\r\n      `${API_URL}/api/achievements/stats/${id}`,\r\n      {},\r\n      {headers: {Authorization: `Bearer ${token}`}}\r\n    ).then(({data}) => setStats(data));\r\n    return () => onUnmount!();\r\n  }, [id, onUnmount, token]);\r\n\r\n  const handleClick = useCallback(() => {\r\n    setCurrAchievement!(achievement as Achievement);\r\n  }, [achievement, setCurrAchievement]);\r\n\r\n  const incCmt = () => {\r\n    setStats(prev => ({\r\n      comments: `${+(prev?.comments as string||0) + 1}`,\r\n      appreciations: prev?.appreciations as string,\r\n    }));\r\n  };\r\n\r\n  const decCmt = () => {\r\n    setStats(prev => ({\r\n      comments: `${+(prev?.comments as string||0) - 1}`,\r\n      appreciations: prev?.appreciations as string,\r\n    }));\r\n  };\r\n\r\n  const showComments = useCallback(() => {\r\n    setCommentsMeta!(\"achievements\", id+'||'+achievement?.title as string);\r\n    setCallbacks!({incCmt, decCmt});\r\n  },[id, achievement?.title, setCommentsMeta, setCallbacks]);\r\n\r\n  const toggleLike = () => {\r\n    if (!liked) {\r\n      axios.put(\r\n        `${API_URL}/api/achievements/like/${id}`,\r\n        {},\r\n        {headers: {Authorization: `Bearer ${token}`}}\r\n      ).then(() => {\r\n        setStats(prev => ({\r\n          appreciations: `${(+(prev?.appreciations as string||0))+1}`, \r\n          comments: prev?.comments as string\r\n        }));\r\n        addLike!(id);\r\n        setLiked(true);\r\n      });\r\n    } else {\r\n      axios.put(\r\n        `${API_URL}/api/achievements/dislike/${id}`,\r\n        {},\r\n        {headers: {Authorization: `Bearer ${token}`}}\r\n      ).then(() => {\r\n        setStats(prev => ({\r\n          appreciations: `${(+(prev?.appreciations as string||0))-1}`, \r\n          comments: prev?.comments as string\r\n        }));\r\n        removeLike!(id);\r\n        setLiked(false);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card dark={isDark}>\r\n      <Top>\r\n        <Name dark={isDark}>{achievement?.title}</Name>\r\n        <HrzntlLn dark={isDark} />\r\n      </Top>\r\n      <Description dark={isDark}>{achievement?.description}</Description>\r\n      <Footer>\r\n        <Interactions dark={isDark}>\r\n          <div onClick={toggleLike}>\r\n            <ClapIcon liked={liked} dark={isDark} />\r\n            <span>\r\n              {stats?.appreciations !== \"0\" ? stats?.appreciations : \"\"}\r\n            </span>\r\n          </div>\r\n          <div onClick={showComments}>\r\n            <InteractionIcon dark={isDark} src={commentIcon} alt=\"comment\" />\r\n            <span>\r\n              {stats?.comments !== \"0\" ? stats?.comments : \"\"}\r\n            </span>\r\n          </div>\r\n        </Interactions>\r\n        <CredBtn dark={isDark} key={language} onClick={handleClick}>\r\n          {transcriptPageTranslations.showCred[+language]}\r\n        </CredBtn>\r\n      </Footer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AchievementCard;\r\n","import AchievementCard from \"./achievement-card.component\";\r\nimport { useAchievementContext } from '../../contexts/achievement.context';\r\n\r\ninterface AchievementsProps {}\r\n\r\nconst Achievements: React.FC<AchievementsProps> = () => {\r\n  const { achievements } = useAchievementContext();\r\n  \r\n  return (\r\n    <>\r\n      {achievements.map(achievementId => (\r\n        <AchievementCard key={achievementId} id={achievementId} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Achievements;\r\n","import { \r\n  OverviewContainer, OverviewBox, \r\n  CloseIcon, OverviewImage,\r\n  CredBtn, OverviewHeader, OverviewTitle\r\n} from '../../utils/styles.util';\r\nimport { transcriptPageTranslations } from '../../utils/translations.util';\r\n\r\nimport { useCommonContext } from '../../contexts/common.context';\r\nimport { useAchievementContext } from '../../contexts/achievement.context';\r\n\r\ninterface AchievementOverviewProps {}\r\n\r\nconst AchievementOverview: React.FC<AchievementOverviewProps> = () => {\r\n  const { isDark, language } = useCommonContext();\r\n  const { currAchievement, setCurrAchievement } = useAchievementContext();\r\n\r\n  if (!currAchievement) return <div />;\r\n\r\n  return (\r\n    <OverviewContainer dark={isDark}>\r\n      <OverviewBox dark={isDark}>\r\n        <OverviewHeader>\r\n          <div />\r\n          <CloseIcon dark={isDark} onClick={() => setCurrAchievement!(null)} />\r\n        </OverviewHeader>\r\n        <OverviewImage\r\n          dark={isDark}\r\n          src={currAchievement.credential_link}\r\n          alt=\"credential\"\r\n        />\r\n        {currAchievement.verify_url && (\r\n          <CredBtn dark={isDark}>\r\n            <a\r\n              href={currAchievement.verify_url}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              {transcriptPageTranslations.verify[+language]}\r\n            </a>\r\n          </CredBtn>\r\n        )}\r\n      </OverviewBox>\r\n    </OverviewContainer>\r\n  );\r\n};\r\n\r\nexport default AchievementOverview;\r\n","import { useEffect } from \"react\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\nimport Achievements from \"../../components/achievements\";\r\nimport AchievementOverview from \"../../components/achievements/achievement-overview.component\";\r\nimport { useMenuContext } from \"../../contexts/menu.context\";\r\nimport { useAchievementContext } from '../../contexts/achievement.context';\r\n\r\ninterface AchievementsPageProps {}\r\n\r\nconst AchievementsPage: React.FC<AchievementsPageProps> = () => {\r\n  const { setMenu } = useMenuContext();\r\n  const { currAchievement } = useAchievementContext();\r\n\r\n  useEffect(() => setMenu!(5), []);\r\n  \r\n  return (\r\n    <>\r\n      {currAchievement && <AchievementOverview />}\r\n      <Container>\r\n        <Achievements />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AchievementsPage;\r\n"],"names":["Container","styled","Card","FadeAnim1","LightBoxShadow","props","dark","DarkBoxShadow","Top","Name","Description","Footer","Interactions","ClapIcon","src","liked","alt","id","useCommonContext","isDark","language","setCurrAchievement","useAchievementContext","useCommentsContext","setCommentsMeta","onUnmount","setCallbacks","useUserContext","likes","addLike","removeLike","token","useState","achievement","setAchievement","stats","setStats","setLiked","useEffect","includes","axios","API_URL","headers","Authorization","then","data","handleClick","useCallback","incCmt","prev","comments","appreciations","decCmt","showComments","title","description","onClick","commentIcon","transcriptPageTranslations","achievements","map","achievementId","currAchievement","credential_link","verify_url","href","target","rel","setMenu","useMenuContext"],"sourceRoot":""}