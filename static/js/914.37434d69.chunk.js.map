{"version":3,"file":"static/js/914.37434d69.chunk.js","mappings":"6LAEaA,EAAYC,EAAAA,GAAAA,IAAH,sO,UCETC,EAAuB,CAClC,CACEC,QAAQ,8HAKV,CACEA,QAAQ,sC,wECTCC,EAAOH,EAAAA,GAAAA,IAAH,wrBAIFI,EAAAA,IAOT,SAAAC,GAAK,OAAIA,EAAMC,MAAN,iBAAJ,GAGMF,EAAAA,GAOXG,EAAAA,IACA,SAACF,GAAD,OAAWA,EAAMC,MAAN,UAAiBE,EAAAA,GAA5B,IAKE,SAAAH,GAAK,OAAIA,EAAMC,MAAN,iBAAJ,I,SCPb,EAd4C,SAAC,GAAe,IAAdJ,EAAa,EAAbA,QACpCO,GAAWC,EAAAA,EAAAA,MAAXD,OAER,OACE,UAACN,EAAD,CAAMG,KAAMG,EAAZ,WACE,0BAAOP,KACP,4BACE,gBAAKS,IAAI,GAAGC,IAAKC,KACjB,wCAIP,ECLD,EAVsC,WACpC,OACE,8BACGZ,EAAOa,KAAI,SAACC,EAAOC,GAAR,OACV,SAAC,GAAD,UAAyBD,GAATC,EADN,KAKjB,E,UCOD,EAZ8C,WAC5C,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAIR,OAFAE,EAAAA,EAAAA,YAAU,kBAAMF,EAAS,EAAf,GAAmB,KAG3B,SAAClB,EAAD,WACE,SAAC,EAAD,KAGL,C","sources":["pages/quotes/styles.tsx","data/quotes.data.ts","components/quotes/styles.tsx","components/quotes/quote-card.component.tsx","components/quotes/index.tsx","pages/quotes/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1.4rem 12%;\r\n  overflow: auto;\r\n  gap: 1.4rem;\r\n  /* mobile styles */\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 1.4rem 4.2%;\r\n  }\r\n`;\r\n","export interface Quote {\r\n  content: string;\r\n}\r\n\r\nexport const quotes: Array<Quote> = [\r\n  {\r\n    content: `“Organs are like modules,\r\n    nerves are the compiler,\r\n    brain is the programmer,\r\n    and you are the user”`\r\n  },\r\n  {\r\n    content: `“Tweet less, code more”`\r\n  },\r\n];\r\n","import styled from 'styled-components';\r\nimport { LightBoxShadow, FadeAnim1, DarkBoxShadow } from '../../utils/styles.util';\r\n\r\nexport const Card = styled.div<{dark: boolean}>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  animation: ${FadeAnim1} 1s;\r\n  gap: 0.21rem;\r\n  span {\r\n    font-family: montserrat;\r\n    font-size: 2.1rem;\r\n    opacity: 0.84;\r\n    color: #1a1a1a;\r\n    ${props => props.dark && `color: #f5f4f9;`}\r\n  }\r\n  div {\r\n    animation: ${FadeAnim1} 1s;\r\n    align-self: flex-end;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.42rem;\r\n    padding: 0.28rem 0.3rem;\r\n    border-radius: 0.3rem;\r\n    ${LightBoxShadow}\r\n    ${(props) => props.dark && `${DarkBoxShadow}`}\r\n    span {\r\n      font-family: arial;\r\n      font-size: 1.2rem;\r\n      color: #1a1a1a;\r\n      ${props => props.dark && `color: #f5f4f9;`}\r\n    }\r\n    img {\r\n      width: 1.4rem;\r\n      height: auto;\r\n      cursor: pointer;\r\n      &:hover {\r\n        opacity: 0.5;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { Quote } from \"../../data/quotes.data\";\r\nimport heartIcon from '../../assets/icons/heart.png';\r\n\r\nimport { useCommonContext } from '../../contexts/common.context';\r\n\r\nimport { Card } from './styles';\r\n\r\ninterface QuoteCardProps extends Quote {}\r\n\r\nconst QuoteCard: React.FC<QuoteCardProps> = ({content}) => {\r\n  const { isDark } = useCommonContext();\r\n\r\n  return (\r\n    <Card dark={isDark}>\r\n      <span>{content}</span>\r\n      <div>\r\n        <img alt=\"\" src={heartIcon} />\r\n        <span>2.3k</span>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default QuoteCard;\r\n","import { quotes } from \"../../data/quotes.data\";\r\n\r\nimport QuoteCard from './quote-card.component';\r\n\r\ninterface QuotesProps {}\r\n\r\nconst Quotes: React.FC<QuotesProps> = () => {\r\n  return (\r\n    <>\r\n      {quotes.map((quote, idx) => (\r\n        <QuoteCard key={idx} {...quote} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Quotes;\r\n","import { useEffect } from \"react\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\nimport Quotes from '../../components/quotes';\r\nimport { useMenuContext } from \"../../contexts/menu.context\";\r\n\r\ninterface QuotesPageProps {}\r\n\r\nconst QuotesPage: React.FC<QuotesPageProps> = () => {\r\n  const { setMenu } = useMenuContext();\r\n\r\n  useEffect(() => setMenu!(7), []);\r\n  \r\n  return (\r\n    <Container>\r\n      <Quotes />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default QuotesPage;\r\n"],"names":["Container","styled","quotes","content","Card","FadeAnim1","props","dark","LightBoxShadow","DarkBoxShadow","isDark","useCommonContext","alt","src","heartIcon","map","quote","idx","setMenu","useMenuContext","useEffect"],"sourceRoot":""}