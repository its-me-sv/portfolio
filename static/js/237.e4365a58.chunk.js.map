{"version":3,"file":"static/js/237.e4365a58.chunk.js","mappings":"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","sources":["pages/achievements/styles.tsx","components/achievements/styles.tsx","components/achievements/achievement-card.component.tsx","components/achievements/index.tsx","components/achievements/achievement-overview.component.tsx","pages/achievements/index.tsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1.4rem 12%;\r\n  overflow: auto;\r\n  gap: 1.4rem;\r\n  /* mobile styles */\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 1.4rem 4.2%;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { LightBoxShadow, DarkBoxShadow, FadeAnim1 } from \"../../utils/styles.util\";\r\n\r\nexport const Card = styled.div<{dark: boolean}>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.42% 0.84%;\r\n  border-radius: 0.42rem;\r\n  gap: 0.42rem;\r\n  animation: ${FadeAnim1} 1s;\r\n  ${LightBoxShadow}\r\n  ${(props) => props.dark && DarkBoxShadow}\r\n  /* mobile styles */\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 0.5% 0.7rem;\r\n  }\r\n`;\r\n\r\nexport const Top = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Name = styled.span<{dark: boolean}>`\r\n  font-family: geomanist;\r\n  font-size: 1.8rem;\r\n  color: #1a1a1a;\r\n  ${props => props.dark && `color: #f5f4f9;`}\r\n`;\r\n\r\nexport const Description = styled.span<{dark: boolean}>`\r\n  font-family: arial;\r\n  font-size: 1.2rem;\r\n  color: #1a1a1a;\r\n  ${props => props.dark && `color: #f5f4f9;`}\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Interactions = styled.div<{dark: boolean}>`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.42rem;\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    gap: 0.3rem;\r\n    &:hover {opacity: 0.5;}\r\n    img {\r\n      width: 2.1rem;\r\n      height: auto;\r\n      opacity: 0.9;\r\n      ${props => props.dark && `filter: invert(100%);`}\r\n    }\r\n    span {\r\n      font-family: arial;\r\n      font-size: 1.2rem;\r\n      color: #1a1a1a;\r\n      ${props => props.dark && `color: #f5f4f9;`}\r\n    }\r\n  }\r\n`;\r\n","import { useCallback, useEffect } from \"react\";\r\nimport { Achievement } from \"../../data/achievements.data\";\r\n\r\nimport { Card, Top, Name, Description, Footer, Interactions } from './styles';\r\nimport { CredBtn, HrzntlLn } from \"../../utils/styles.util\";\r\nimport { transcriptPageTranslations } from '../../utils/translations.util';\r\nimport clapIcon from \"../../assets/icons/clap.png\";\r\nimport commentIcon from \"../../assets/icons/comment.png\";\r\n\r\nimport { useCommonContext } from '../../contexts/common.context';\r\nimport { useAchievementContext } from '../../contexts/achievement.context';\r\nimport { useCommentsContext } from '../../contexts/comments.context';\r\n\r\ninterface AchievementCardProps extends Achievement {}\r\n\r\nconst AchievementCard: React.FC<AchievementCardProps> = ({\r\n  name, description, credUrl, verifyUrl\r\n}) => {\r\n  const { isDark, language } = useCommonContext();\r\n  const { setCurrAchievement } = useAchievementContext();\r\n  const { setCommentsMeta, onUnmount } = useCommentsContext();\r\n\r\n  const handleClick = useCallback(() => {\r\n    const achievement: Achievement = {\r\n      name, description, credUrl,\r\n      verifyUrl,\r\n    };\r\n    setCurrAchievement!(achievement);\r\n  }, [name, description, credUrl, verifyUrl, credUrl]);\r\n\r\n  const showComments = useCallback(\r\n    () => setCommentsMeta!('Achievement', name), [name, setCommentsMeta]);\r\n\r\n  useEffect(() => {\r\n    return () => onUnmount!()\r\n  }, []);\r\n\r\n  return (\r\n    <Card dark={isDark}>\r\n      <Top>\r\n        <Name dark={isDark}>{name}</Name>\r\n        <HrzntlLn dark={isDark} />\r\n      </Top>\r\n      <Description dark={isDark}>{description}</Description>\r\n      <Footer>\r\n        <Interactions dark={isDark}>\r\n          <div>\r\n            <img src={clapIcon} alt=\"clap\" />\r\n            <span>37</span>\r\n          </div>\r\n          <div onClick={showComments}>\r\n            <img src={commentIcon} alt=\"comment\" />\r\n            <span>34</span>\r\n          </div>\r\n        </Interactions>\r\n        <CredBtn dark={isDark} key={language} onClick={handleClick}>\r\n          {transcriptPageTranslations.showCred[+language]}\r\n        </CredBtn>\r\n      </Footer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AchievementCard;\r\n","import AchievementCard from \"./achievement-card.component\";\r\nimport { useAchievementContext } from '../../contexts/achievement.context';\r\n\r\ninterface AchievementsProps {}\r\n\r\nconst Achievements: React.FC<AchievementsProps> = () => {\r\n  const { achievements } = useAchievementContext();\r\n  \r\n  return (\r\n    <>\r\n      {achievements.map(achievement => (\r\n        <AchievementCard key={achievement.name} {...achievement} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Achievements;\r\n","import { \r\n  OverviewContainer, OverviewBox, \r\n  CloseIcon, OverviewImage,\r\n  CredBtn, OverviewHeader, OverviewTitle\r\n} from '../../utils/styles.util';\r\nimport { transcriptPageTranslations } from '../../utils/translations.util';\r\n\r\nimport { useCommonContext } from '../../contexts/common.context';\r\nimport { useAchievementContext } from '../../contexts/achievement.context';\r\n\r\ninterface AchievementOverviewProps {}\r\n\r\nconst AchievementOverview: React.FC<AchievementOverviewProps> = () => {\r\n  const { isDark, language } = useCommonContext();\r\n  const { currAchievement, setCurrAchievement } = useAchievementContext();\r\n\r\n  if (!currAchievement) return <div />;\r\n\r\n  return (\r\n    <OverviewContainer dark={isDark}>\r\n      <OverviewBox dark={isDark}>\r\n        <OverviewHeader>\r\n          <div />\r\n          <CloseIcon dark={isDark} onClick={() => setCurrAchievement!(null)} />\r\n        </OverviewHeader>\r\n        <OverviewImage\r\n          dark={isDark}\r\n          src={currAchievement.credUrl}\r\n          alt=\"credential\"\r\n        />\r\n        {currAchievement.verifyUrl && (\r\n          <CredBtn dark={isDark}>\r\n            <a\r\n              href={currAchievement.verifyUrl}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              {transcriptPageTranslations.verify[+language]}\r\n            </a>\r\n          </CredBtn>\r\n        )}\r\n      </OverviewBox>\r\n    </OverviewContainer>\r\n  );\r\n};\r\n\r\nexport default AchievementOverview;\r\n","import { useEffect } from \"react\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\nimport Achievements from \"../../components/achievements\";\r\nimport AchievementOverview from \"../../components/achievements/achievement-overview.component\";\r\nimport { useMenuContext } from \"../../contexts/menu.context\";\r\nimport { useAchievementContext } from '../../contexts/achievement.context';\r\n\r\ninterface AchievementsPageProps {}\r\n\r\nconst AchievementsPage: React.FC<AchievementsPageProps> = () => {\r\n  const { setMenu } = useMenuContext();\r\n  const { currAchievement } = useAchievementContext();\r\n\r\n  useEffect(() => setMenu!(5), []);\r\n  \r\n  return (\r\n    <>\r\n      {currAchievement && <AchievementOverview />}\r\n      <Container>\r\n        <Achievements />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AchievementsPage;\r\n"],"names":["Container","styled","Card","FadeAnim1","LightBoxShadow","props","dark","DarkBoxShadow","Top","Name","Description","Footer","Interactions","name","description","credUrl","verifyUrl","useCommonContext","isDark","language","setCurrAchievement","useAchievementContext","useCommentsContext","setCommentsMeta","onUnmount","handleClick","useCallback","showComments","useEffect","src","alt","onClick","commentIcon","transcriptPageTranslations","achievements","map","achievement","currAchievement","href","target","rel","setMenu","useMenuContext"],"sourceRoot":""}