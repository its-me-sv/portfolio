{"version":3,"file":"static/js/682.2b62fd64.chunk.js","mappings":"sNAyBA,EAlB0C,WACxC,IAAQA,GAAWC,EAAAA,EAAAA,MAAXD,OACR,GAAyCE,EAAAA,EAAAA,MAAjCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,YAAaC,EAA5B,EAA4BA,SAE5B,OACE,SAAC,KAAD,UACGF,EAAMG,KAAI,SAAAC,GAAM,OACf,SAAC,KAAD,CAEEC,QAAS,kBAAMJ,EAAaG,EAAnB,EACTE,SAAUF,IAAWF,EACrBK,KAAMV,EAJR,SAKEO,GAJKA,EAFQ,KAUtB,E,6BCpBYI,EAAYC,EAAAA,GAAAA,IAAH,iPAYTC,EAAUD,EAAAA,GAAAA,IAAH,8JAMhBE,EAAAA,IACA,SAAAC,GAAK,OAAIA,EAAML,MAAQM,EAAAA,EAAlB,IAGIC,EAAaL,EAAAA,GAAAA,IAAH,qOAYVM,EAAeN,EAAAA,GAAAA,KAAH,0KAKVO,EAAAA,IAEX,SAAAJ,GAAK,OAAIA,EAAML,MAAN,iBAAJ,IAGIU,EAAcR,EAAAA,GAAAA,IAAH,4UAUPO,EAAAA,IAEX,SAAAJ,GAAK,OAAIA,EAAML,MAAN,iBAAJ,ICnCEW,EAAqB,CAChC,CACEC,KAAM,UACNC,IAAK,gBAEP,CACED,KAAM,OACNC,IAAK,YAEP,CACED,KAAM,eACNC,IAAK,sB,SCTIC,EAA6C,CACxD,eAzB0B,CAC1B,cAAe,QACf,wBAAyB,OACzB,qBAAsB,SACtB,uBAAwB,MACxB,YAAa,SACb,aAAc,OAoBd,WAjBuB,CACvB,cAAe,QACf,mBAAoB,OACpB,4BAA6B,MAe7B,oBAZ+B,CAC/B,MAAS,QACT,SAAY,OACZ,OAAU,KACV,cAAe,MACf,mBAAoB,MACpB,cAAiB,Q,UCgBnB,EA7B0C,SAAC,GAAiB,IAAhBF,EAAe,EAAfA,KAAMC,EAAS,EAATA,IAChD,GAA6BtB,EAAAA,EAAAA,MAArBD,EAAR,EAAQA,OAAQyB,EAAhB,EAAgBA,SAEhB,GAA0BC,EAAAA,EAAAA,UAAqB,CAAC,GAAhD,eAAOL,EAAP,KAAcM,EAAd,KAOA,OALAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQC,YAAW,kBAAMH,EAASH,EAAcD,GAA7B,GAAoC,MAC7D,OAAO,kBAAMQ,aAAaF,EAAnB,CACR,GAAE,CAACN,KAGF,UAACV,EAAD,CAASH,KAAMV,EAAf,WACE,SAACkB,EAAD,CAAcR,KAAMV,EAApB,SAA6BgC,EAAAA,GAAsBV,IAAOG,MAC1D,SAACR,EAAD,UACGgB,OAAOC,KAAKb,GAAOf,KAAI,SAAC6B,GACvB,IAAMC,EAAmBJ,EAAAA,GAAsBG,IAAOV,GAChDY,EAAgBhB,EAAMc,GAC5B,OACE,UAACf,EAAD,CAAaV,KAAMV,EAAnB,WACE,0BAAOoC,KACP,0BAAOC,MAFuBD,EAASC,EAK5C,QAIR,ECpBD,EAVoC,WAClC,OACE,SAAC1B,EAAD,UACGU,EAAMf,KAAI,SAAAgC,GAAI,OACb,SAAC,GAAD,UAA8BA,GAAfA,EAAKhB,KADP,KAKpB,E,UCQD,EAb4C,WAC1C,IAAQiB,GAAYC,EAAAA,EAAAA,MAAZD,QAIR,OAFAX,EAAAA,EAAAA,YAAU,kBAAMW,EAAS,EAAf,GAAmB,KAG3B,UAAC,KAAD,YACE,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,C","sources":["components/stat-menu/index.tsx","components/stats/styles.tsx","data/stats.data.ts","components/stats/temp-data.ts","components/stats/stat-card.component.tsx","components/stats/index.tsx","pages/stats/index.tsx"],"sourcesContent":["import { MenuContainer, MenuItem } from \"../../utils/styles.util\";\r\n\r\nimport { useCommonContext } from \"../../contexts/common.context\";\r\nimport { useStatContext } from '../../contexts/stat.context';\r\n\r\ninterface StatMenuProps {}\r\n\r\nconst StatMenu: React.FC<StatMenuProps> = () => {\r\n  const { isDark } = useCommonContext();\r\n  const { years, setCurrYear, currYear } = useStatContext();\r\n\r\n  return (\r\n    <MenuContainer>\r\n      {years.map(option => (\r\n        <MenuItem \r\n          key={option}\r\n          onClick={() => setCurrYear!(option)}\r\n          selected={option === currYear}\r\n          dark={isDark}\r\n        >{option}</MenuItem>\r\n      ))}\r\n    </MenuContainer>\r\n  );\r\n};\r\n\r\nexport default StatMenu;\r\n","import styled from \"styled-components\";\r\nimport { FadeAnim1, LightBoxShadowNoHover, DarkBoxShadowNoHover } from \"../../utils/styles.util\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n  padding: 0 1rem;\r\n  /* mobile styles */\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 1rem 2rem;\r\n    gap: 2.1rem;\r\n  }\r\n`;\r\n\r\nexport const Section = styled.div<{dark: boolean}>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 0.3rem 1rem;\r\n  border-radius: 0.42rem;\r\n  ${LightBoxShadowNoHover}\r\n  ${props => props.dark && DarkBoxShadowNoHover}\r\n`;\r\n\r\nexport const SubSection = styled.div`\r\n  padding-top: 0.36rem;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 2.1rem;\r\n  /* mobile styles */\r\n  @media only screen and (max-width: 768px) {\r\n    flex-direction: column;\r\n    gap: 1.1rem;\r\n  }\r\n`;\r\n\r\nexport const SectionTitle = styled.span<{dark: boolean}>`\r\n  font-family: bahnschrift;\r\n  font-size: 1.8rem;\r\n  opacity: 0.7;\r\n  text-decoration: underline;\r\n  animation: ${FadeAnim1} 1s;\r\n  color: #1a1a1a;\r\n  ${props => props.dark && `color: #f5f4f9;`}\r\n`;\r\n\r\nexport const SectionItem = styled.div<{dark: boolean}>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 0.07rem;\r\n  span {\r\n    font-family: roboto;\r\n    font-size: 1.6rem;\r\n    text-align: center;\r\n    opacity: 0.8;\r\n    animation: ${FadeAnim1} 1s;\r\n    color: #1a1a1a;\r\n    ${props => props.dark && `color: #f5f4f9;`}\r\n    &:last-child {\r\n      font-family: bahnschrift;\r\n    }\r\n  }\r\n`;\r\n","export interface Stat {\r\n  name: string;\r\n  url: string;\r\n}\r\n\r\nexport interface StatObject {\r\n  [key: string]: string;\r\n  // 'Likes'?: string;\r\n  // 'Comments'?: string;\r\n  // 'Shares'?: string;\r\n  // 'Appreciations'?: string;\r\n  // 'Total views'?: string;\r\n  // 'Last view'?: string;\r\n  // 'Prime time'?: string;\r\n  // 'Total users'?: string;\r\n  // 'Currently active'?: string;\r\n  // 'Code visits'?: string;\r\n  // 'Project launches'?: string;\r\n  // 'Total session time'?: string;\r\n  // 'Average session time'?: string;\r\n  // 'Average views per day'?: string;\r\n  // 'Average new users per day'?: string;\r\n}\r\n\r\nexport const stats: Array<Stat> = [\r\n  {\r\n    name: 'General', \r\n    url: '/get/general'\r\n  },\r\n  {\r\n    name: 'User',\r\n    url: '/get/url'\r\n  },\r\n  {\r\n    name: 'Interactions',\r\n    url: '/get/interactions'\r\n  }\r\n];\r\n","import { StatObject } from \"../../data/stats.data\";\r\n\r\nconst general: StatObject = {\r\n  'Total views': '32.6k',\r\n  'Average views per day': '2.6k',\r\n  'Total session time': '4d 12h',\r\n  'Average session time': '12m',\r\n  'Last view': '1m ago',\r\n  'Prime time': '4pm'\r\n};\r\n\r\nconst user: StatObject = {\r\n  'Total users': '32.6k',\r\n  'Currently active': '2.6k',\r\n  'Average new users per day': '20'\r\n};\r\n\r\nconst interactions: StatObject = {\r\n  'Likes': '32.6k',\r\n  'Comments': '2.6k',\r\n  'Shares': '20',\r\n  'Code visits': '12m',\r\n  'Project launches': '12m',\r\n  'Appreciations': '12m'\r\n};\r\n\r\nexport const statsTempData: {[key: string]: StatObject} = {\r\n  '/get/general': general,\r\n  '/get/url': user,\r\n  '/get/interactions': interactions\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { Section, SectionTitle, SubSection, SectionItem } from './styles';\r\nimport { statsTempData } from './temp-data';\r\nimport { statsPageTranslations } from '../../utils/translations.util';\r\n\r\nimport { Stat, StatObject } from '../../data/stats.data';\r\nimport { useCommonContext } from '../../contexts/common.context';\r\n\r\ninterface StatCardProps extends Stat {}\r\n\r\nconst StatCard: React.FC<StatCardProps> = ({name, url}) => {\r\n  const { isDark, language } = useCommonContext();\r\n\r\n  const [stats, setStats] = useState<StatObject>({});\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setStats(statsTempData[url]), 1400);\r\n    return () => clearTimeout(timer);\r\n  }, [url]);\r\n\r\n  return (\r\n    <Section dark={isDark}>\r\n      <SectionTitle dark={isDark}>{statsPageTranslations[name][+language]}</SectionTitle>\r\n      <SubSection>\r\n        {Object.keys(stats).map((stat) => {\r\n          const propName: string = statsPageTranslations[stat][+language];\r\n          const value: string = stats[stat];\r\n          return (\r\n            <SectionItem dark={isDark} key={propName+value}>\r\n              <span>{propName}</span>\r\n              <span>{value}</span>\r\n            </SectionItem>\r\n          );\r\n        })}\r\n      </SubSection>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default StatCard;\r\n","import { Container } from './styles';\r\nimport { stats } from '../../data/stats.data';\r\n\r\nimport StatCard from './stat-card.component';\r\n\r\ninterface StatsProps {}\r\n\r\nconst Stats: React.FC<StatsProps> = () => {\r\n  return (\r\n    <Container>\r\n      {stats.map(prop => (\r\n        <StatCard key={prop.name} {...prop} />\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import { useEffect } from \"react\";\r\n\r\nimport { PageContainer } from \"../../utils/styles.util\";\r\n\r\nimport StatMenu from \"../../components/stat-menu\";\r\nimport Stats from \"../../components/stats\";\r\nimport { useMenuContext } from \"../../contexts/menu.context\";\r\n\r\ninterface StatsPageProps {}\r\n\r\nconst StatsPage: React.FC<StatsPageProps> = () => {\r\n  const { setMenu } = useMenuContext();\r\n\r\n  useEffect(() => setMenu!(8), []);\r\n  \r\n  return (\r\n    <PageContainer>\r\n      <StatMenu />\r\n      <Stats />\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default StatsPage;\r\n"],"names":["isDark","useCommonContext","useStatContext","years","setCurrYear","currYear","map","option","onClick","selected","dark","Container","styled","Section","LightBoxShadowNoHover","props","DarkBoxShadowNoHover","SubSection","SectionTitle","FadeAnim1","SectionItem","stats","name","url","statsTempData","language","useState","setStats","useEffect","timer","setTimeout","clearTimeout","statsPageTranslations","Object","keys","stat","propName","value","prop","setMenu","useMenuContext"],"sourceRoot":""}